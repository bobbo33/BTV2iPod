'BTV2iPod_MetaData.vbs'v1.0 2009-08-27'v1.1 2009-09-08 Add quasi episode season/number using year/EPGID'Extracts BTV metadata using BTV command line tools: http://forums.snapstream.com/vb/beyond-tv-downloads/44564-addon-btv-command-line-tools.html'then attaches iPod compatible metadata to the MP4 file using Atomic Parsley: http://atomicparsley.sourceforge.net/'debugging disabled so it will continue to run when used as a scheduled jobboolDebug = falseIf boolDebug = false Then      On Error Resume NextEnd IfSet objFSO = CreateObject("Scripting.FileSystemObject")Set objShell = CreateObject("WScript.Shell")objShell.CurrentDirectory = objFSO.GetParentFolderName(Wscript.ScriptFullName)'check for a valid command line inputIf WScript.Arguments.Count <> 3 And boolDebug = true Then   MsgBox "Please input valid input and output filename."   WScript.QuitEnd If'check that the input file existsmpgFile = WScript.Arguments(0)If objFSO.FileExists(mpgFile) = False And boolDebug = true Then   MsgBox "File not found: " & vbNewLine & mpgFile   WScript.QuitEnd If'check that the output file existsmp4File = WScript.Arguments(1)If objFSO.FileExists(mp4File) = False And boolDebug = true Then   MsgBox "File not found: " & vbNewLine & mp4File   WScript.QuitEnd If'get server name as last argumentstrServer = WScript.Arguments(2)If Len(strServer) > 1 Then   strServer = "--server=" & strServerEnd If'create xml file if it does not exist   btvFile = Left(mpgFile,Len(mpgFile)-4) & ".xml"If objFSO.FileExists(btvFile) = False Then   intReturn = objShell.Run( "BTVMetaData.exe --mode=extract " & strServer & " """ & mpgFile & """", 0, True )End If'check that the xml file now existsbtvFile = Left(mpgFile,Len(mpgFile)-4) & ".xml"If objFSO.FileExists(btvFile) Then   strTitle = GetBTVProperty(btvFile,"EpisodeTitle")   strGenre = GetBTVProperty(btvFile,"Genre")   strDescription = GetBTVProperty(btvFile,"EpisodeDescription")   strTVNetwork = GetBTVProperty(btvFile,"StationCallsign")   strTVShowName = GetBTVProperty(btvFile,"DisplayTitle")   strTVEpisode = GetBTVProperty(btvFile,"EpisodeTitle")End If'if missing, fill in show details from file nameIf Len(strTitle) < 2 Then   strTitle = Mid(mpgFile, InStr(mpgFile,"-") + 1, Len(mpgFile) - InStr(mpgFile,"-") - 4)End IfIf Len(strTVShowName) < 2 Then   strTVShowName = Mid(mpgFile, InStrRev(mpgFile,"\") + 1, InStr(mpgFile,"-") - InStrRev(mpgFile,"\") - 1)End IfIf Len(strTVEpisode) < 2 Then   strTVEpisode = strTitleEnd If'fake season number with year of original airingstrAirDate = GetBTVProperty(btvFile,"OriginalAirDate")If Len(strAirDate)>4 Then   intSeason = Left(strAirDate,4)Else   intSeason = Year(Now())End If'fake episode number from EPGIDstrEPGID = GetBTVProperty(btvFile,"EPGID")If Len(strEPGID)>4 Then   intEpisodeNum = Right(strEPGID,4)Else   intEpisodeNum = DateDiff("w","1/1/" & Year(Now()),Now())End If'add iTunes metadata to mp4 fileintReturn = objShell.Run( "AtomicParsley.exe """ & mp4File & """" & _                           " --overWrite --stik ""TV Show""" & _                           " --title """ & strTitle & """" & _                           " --genre """ & strGenre & """" & _                           " --description """ & strDescription & """" & _                           " --TVNetwork " & strTVNetwork & _                           " --TVShowName """ & strTVShowName & """" & _                           " --TVEpisode """ & strTVEpisode & """" & _                           " --TVEpisodeNum " & intEpisodeNum & _                           " --TVSeason " & intSeason _                           , 0, True )'clean up on exitSet objShell = NothingSet objFSO = NothingFunction GetBTVProperty(xmlSource,strProperty)   Set xmlDoc=CreateObject("Microsoft.XMLDOM")   xmlDoc.async = False   xmlDoc.setProperty "SelectionLanguage", "XPath"   intSuccess = xmlDoc.load(xmlSource)   If Not intSuccess Then      If boolDebug = true Then         strResult = "XML Error"      Else         strResult = ""      End If   Else      strQuery = "/episode-properties/property[@name='" & strProperty & "']"      strResult = xmlDoc.selectSingleNode(strQuery).Text   End If   Set xmlDoc = Nothing   GetBTVProperty = strResultEnd Function'not currently used - for development onlySub ListAllNodes(xmlSource)   Set xmlDoc=CreateObject("Microsoft.XMLDOM")   xmlDoc.async = False   xmlDoc.setProperty "SelectionLanguage", "XPath"   intSuccess = xmlDoc.load(xmlSource)   If Not intSuccess Then      If boolDebug = true Then         strResult = "XML Error"      Else         strResult = ""      End If   Else      Set xmlNodes = xmlDoc.selectNodes("/episode-properties/property")      For Each xmlNode In xmlNodes         strResult = strResult & xmlNode.Attributes.Item(0).Value & " : " & xmlNode.Text & vbNewLine      Next   End If   Set xmlDoc = Nothing   MsgBox strResultEnd Sub